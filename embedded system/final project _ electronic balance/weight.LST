C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE WEIGHT
OBJECT MODULE PLACED IN weight.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE weight.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "EEPROM.H"
   2          #include "LCD1602.h"
   3          #include "HX711.h"
   4          //#include "Delay_ms.h"
   5          #include "WEIGHT.H"
   6          
   7          //定义变量
   8          unsigned char KEY_NUM = 0;   //用来存放按键按下的键值
   9          unsigned long HX711_Buffer = 0;  //用来存放HX711读取出来的数据
  10          unsigned long Weight_Maopi = 0; //用来存放毛皮数据
  11          long Weight_Shiwu = 0;          //用来存放实物重量
  12          long Max_Value = 0;             //用来存放设置最大值
  13          char maxValueTable[4] = {1,0,0,0};
  14          unsigned char state = 0;    //用来存放设置状态
  15          unsigned char Blink_Speed = 0;
  16          #define Blink_Speed_Max 6          //该值可以改变设置指针闪烁频率
  17          
  18          //校准参数
  19          //当发现测试出来的重量偏大时，增加该数值。
  20          //如果测试出来的重量偏小时，减小改数值。
  21          #define GapValue 430
  22          
  23          //传感器最大测量值，单位是g
  24          #define AlarmValue 5000     
  25          
  26          //****************************************************
  27          //主函数
  28          //****************************************************
  29          
  30          void weight_initial(void)
  31          {
  32   1        Init_LCD1602();           //初始化LCD1602
  33   1        LCD1602_write_com(0x80);      //设置LCD1602指针
  34   1        LCD1602_write_word("Welcome to use!");}
  35            
  36          void weight_update(void )
  37          {
  38   1        /*Get_Maopi();
  39   1        Get_Maopi();
  40   1        Delay_ms(2000);    //延时
  41   1        Get_Maopi();
  42   1        Get_Maopi();        //多次测量有利于HX711稳定
  43   1        LCD1602_write_com(0x01);    //清屏
  44   1          //读取EEPROM中保存的报警值
  45   1          maxValueTable[0] = byte_read(0x2000);
  46   1          maxValueTable[1] = byte_read(0x2001);
  47   1          maxValueTable[2] = byte_read(0x2002);
  48   1          maxValueTable[3] = byte_read(0x2003);
  49   1          Max_Value = maxValueTable[0]*1000+maxValueTable[1]*100+maxValueTable[2]*10+maxValueTable[3];    //计算
             -超限报警界限值
  50   1        
  51   1        while(1)
  52   1        {*/
  53   1              Get_Weight();   
  54   1        
C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 2   

  55   1          //display current weight
  56   1          LCD1602_write_com(0x80);
  57   1              LCD1602_write_word("Weight=");
  58   1          LCD1602_write_data(Weight_Shiwu%10000/1000 + 0x30);
  59   1          LCD1602_write_data('.');
  60   1          LCD1602_write_data(Weight_Shiwu%1000/100 + 0x30);
  61   1          LCD1602_write_data(Weight_Shiwu%100/10 + 0x30);
  62   1          LCD1602_write_data(Weight_Shiwu%10 + 0x30);   
  63   1          LCD1602_write_word("Kg");
  64   1      
  65   1          /*KEY_NUM = Scan_Key();
  66   1              if(KEY_NUM == 1)        //press 1 to switch statement
  67   1              {
  68   1                  state++;
  69   1                  if(state == 5)
  70   1                  {
  71   1                      state = 0;
  72   1                      SectorErase(0x2000);
  73   1                      byte_write(0x2000,maxValueTable[0]);        //store data of EEPROM
  74   1                      byte_write(0x2001,maxValueTable[1]);
  75   1                      byte_write(0x2002,maxValueTable[2]);        //store data of EEPROM
  76   1                      byte_write(0x2003,maxValueTable[3]);
  77   1                      Max_Value = maxValueTable[0]*1000+maxValueTable[1]*100+maxValueTable[2]*10+maxValueTable[3
             -];    //计算超限报警界限值
  78   1                  }
  79   1              }
  80   1              if(KEY_NUM == 2)        //按键加
  81   1              {
  82   1                  if(state != 0)
  83   1                  {
  84   1                      maxValueTable[state-1]++;
  85   1                      if(maxValueTable[state-1] >= 10)
  86   1                      {
  87   1                          maxValueTable[state-1] = 0;
  88   1                      }
  89   1                  }
  90   1                  
  91   1              }
  92   1              if(KEY_NUM == 3)        //按键减
  93   1              {
  94   1                  if(state != 0)
  95   1                  {
  96   1                      maxValueTable[state-1]--;
  97   1                      if(maxValueTable[state-1] <= -1)
  98   1                      {
  99   1                          maxValueTable[state-1] = 9;
 100   1                      }
 101   1                  }
 102   1              }
 103   1          if(KEY_NUM == 4)
 104   1          {
 105   1            Get_Maopi();      //去皮  
 106   1          }
 107   1              
 108   1              
 109   1              if(state != 0)
 110   1              {
 111   1                  Blink_Speed ++;
 112   1                  if(Blink_Speed == Blink_Speed_Max)
 113   1                  {
 114   1                      Blink_Speed = 0;
 115   1                  }
C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 3   

 116   1              }
 117   1              switch(state)
 118   1              {
 119   1                  case 0:
 120   1                      LCD1602_write_com(0x80+0x40);
 121   1                      LCD1602_write_word("MAX=");
 122   1                      LCD1602_write_data(maxValueTable[0]+0x30);
 123   1                      LCD1602_write_data('.');
 124   1                      LCD1602_write_data(maxValueTable[1]+0x30);
 125   1                      LCD1602_write_data(maxValueTable[2]+0x30);
 126   1                      LCD1602_write_data(maxValueTable[3]+0x30);
 127   1                      LCD1602_write_word("Kg");
 128   1                      break;
 129   1                  case 1:
 130   1                      LCD1602_write_com(0x80+0x40);
 131   1                      LCD1602_write_word("MAX=");
 132   1                      if(Blink_Speed < Blink_Speed_Max/2)
 133   1                      {
 134   1                          LCD1602_write_data(maxValueTable[0]+0x30);
 135   1                      }
 136   1                      else
 137   1                      {
 138   1                          LCD1602_write_data(' ');
 139   1                      }
 140   1                      LCD1602_write_data('.');
 141   1                      LCD1602_write_data(maxValueTable[1]+0x30);
 142   1                      LCD1602_write_data(maxValueTable[2]+0x30);
 143   1                      LCD1602_write_data(maxValueTable[3]+0x30);
 144   1                      LCD1602_write_word("Kg");
 145   1                      break;
 146   1                  case 2:
 147   1                      LCD1602_write_com(0x80+0x40);
 148   1                      LCD1602_write_word("MAX=");
 149   1                      LCD1602_write_data(maxValueTable[0]+0x30);
 150   1                      LCD1602_write_data('.');
 151   1                      if(Blink_Speed < Blink_Speed_Max/2)
 152   1                      {
 153   1                          LCD1602_write_data(maxValueTable[1]+0x30);
 154   1                      }
 155   1                      else
 156   1                      {
 157   1                          LCD1602_write_data(' ');
 158   1                      }
 159   1                      LCD1602_write_data(maxValueTable[2]+0x30);
 160   1                      LCD1602_write_data(maxValueTable[3]+0x30);
 161   1                      LCD1602_write_word("Kg");
 162   1                      break;
 163   1                  case 3:
 164   1                      LCD1602_write_com(0x80+0x40);
 165   1                      LCD1602_write_word("MAX=");
 166   1                      LCD1602_write_data(maxValueTable[0]+0x30);
 167   1                      LCD1602_write_data('.');
 168   1                      LCD1602_write_data(maxValueTable[1]+0x30);
 169   1                      if(Blink_Speed < Blink_Speed_Max/2)
 170   1                      {
 171   1                          LCD1602_write_data(maxValueTable[2]+0x30);
 172   1                      }
 173   1                      else
 174   1                      {
 175   1                          LCD1602_write_data(' ');
 176   1                      }                
 177   1                      LCD1602_write_data(maxValueTable[3]+0x30);
C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 4   

 178   1                      LCD1602_write_word("Kg");
 179   1                      break;
 180   1                  case 4:
 181   1                      LCD1602_write_com(0x80+0x40);
 182   1                      LCD1602_write_word("MAX=");
 183   1                      LCD1602_write_data(maxValueTable[0]+0x30);
 184   1                      LCD1602_write_data('.');
 185   1                      LCD1602_write_data(maxValueTable[1]+0x30);
 186   1                      LCD1602_write_data(maxValueTable[2]+0x30);
 187   1                      if(Blink_Speed < Blink_Speed_Max/2)
 188   1                      {
 189   1                          LCD1602_write_data(maxValueTable[3]+0x30);
 190   1                      }
 191   1                      else
 192   1                      {
 193   1                          LCD1602_write_data(' ');
 194   1                      }                 
 195   1                      LCD1602_write_word("Kg");
 196   1                      break;
 197   1                  default:
 198   1                      break;
 199   1                  
 200   1              }*/
 201   1              
 202   1              //超限报警
 203   1              if(Weight_Shiwu >= Max_Value || Weight_Shiwu >= AlarmValue)         //超过设置最大值或者传感器本身
             -量程最大值报警  
 204   1          {
 205   2            Buzzer = 0; 
 206   2          }
 207   1          else
 208   1          {
 209   2            Buzzer = 1;
 210   2          }
 211   1         // }
 212   1        }
 213          //****************************************************
 214          //称重
 215          //****************************************************
 216          void Get_Weight()
 217          {
 218   1        Weight_Shiwu = HX711_Read();
 219   1        Weight_Shiwu = Weight_Shiwu - Weight_Maopi;   //获取净重
 220   1        if(Weight_Shiwu >= 0)     
 221   1        { 
 222   2          Weight_Shiwu = (unsigned long)((float)Weight_Shiwu/GapValue);   //计算实物的实际重量
 223   2        }
 224   1        else
 225   1        {
 226   2          Weight_Shiwu = 0;
 227   2        }
 228   1      }
 229          
 230          //****************************************************
 231          //获取毛皮重量
 232          //****************************************************
 233          void Get_Maopi()
 234          {
 235   1        Weight_Maopi = HX711_Read();  
 236   1      } 
 237          
 238          
C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 5   

 239          //****************************************************
 240          //MS延时函数(12M晶振下测试)
 241          //****************************************************
 242          void Delay_ms(unsigned int n)
 243          {
 244   1        unsigned int  i,j;
 245   1        for(i=0;i<n;i++)
 246   1          for(j=0;j<123;j++);
 247   1      }
 248          
 249          //****************************************************
 250          //蜂鸣器程序
 251          //****************************************************
 252          void Buzzer_Di()
 253          {
 254   1        Buzzer = 0;
 255   1        Delay_ms(10);
 256   1        Buzzer = 1;
 257   1        Delay_ms(10);
 258   1      }
 259          
 260          //****************************************************
 261          //按键扫描程序
 262          //****************************************************
 263          unsigned char Scan_Key()
 264          { 
 265   1          if( KEY1 == 0 )           //按键扫描
 266   1        {
 267   2          Delay_ms(10);         //延时去抖
 268   2          if( KEY1 == 0 )
 269   2          {
 270   3            Buzzer_Di();
 271   3            while(KEY1 == 0);     //等待松手
 272   3            return 1;
 273   3          }
 274   2        }
 275   1          if( KEY2 == 0 )           //按键扫描
 276   1        {
 277   2          Delay_ms(10);         //延时去抖
 278   2          if( KEY2 == 0 )
 279   2          {
 280   3            Buzzer_Di();
 281   3            while(KEY2 == 0);     //等待松手
 282   3            return 2;
 283   3          }
 284   2        }
 285   1          if( KEY3 == 0 )           //按键扫描
 286   1        {
 287   2          Delay_ms(10);         //延时去抖
 288   2          if( KEY3 == 0 )
 289   2          {
 290   3            Buzzer_Di();
 291   3            while(KEY3 == 0);     //等待松手
 292   3            return 3;
 293   3          }
 294   2        }
 295   1        if( KEY4 == 0 )           //按键扫描
 296   1        {
 297   2          Delay_ms(10);         //延时去抖
 298   2          if( KEY4 == 0 )
 299   2          {
 300   3            Buzzer_Di();
C51 COMPILER V9.52.0.0   WEIGHT                                                            11/24/2015 20:06:25 PAGE 6   

 301   3            while(KEY4 == 0);     //等待松手
 302   3            return 4;
 303   3          }
 304   2        }
 305   1          return 0;
 306   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    456    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
